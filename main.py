import telebot
from telebot import types
from datetime import datetime, timedelta
from random import shuffle

bot = telebot.TeleBot("5287049971:AAGrFEFSUi1BdvZAR45NiJAa8Cb9UNbxRz8")

# —Å–ª–æ–≤–∞—Ä—å —Å–æ –≤—Å–µ–º–∏ —á–∞—Ç–∞–º–∏ –∏ –∏–≥—Ä–æ–∫–∞–º–∏ –≤ —ç—Ç–∏—Ö —á–∞—Ç–∞—Ö
chat_list = {}
# –ü—Ä–∏–º–µ—Ä —Å–ª–æ–≤–∞—Ä—è –æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞
# {-684942573:
#   {'game_running': True,
#   'players':
#       {1680333060: {'name': '–ú–∏—Ö–∞–∏–ª', 'role': '–º–∞—Ñ–∏—è'},
#       704323030: {'name': 'Olesya', 'role': '–º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å'}},
#       532324189: {'name': 'Danil', 'role': '–º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å'}},
#    'dead': (1081561235, {'name': '–Ø—Ä–æ—Å–ª–∞–≤', 'role': '—à–µ—Ä–∏—Ñ'}),
#    '—à–µ—Ä–∏—Ñ': True,
#    'dList_id': 2418,
#    '—àList_id': 2419,
#    'time_event': datetime.datetime(2022, 1, 26, 20, 25, 47, 280965)}}
time_now = datetime.now()

def PlayerInGame(player_id):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–≥—Ä–æ–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
    global chat_list
    for el in chat_list:
        if player_id in chat_list[el]['players']:
            return False
        else:
            return True
def ChangeRole(player_id, player_dict, new_role, text):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —Ä–æ–ª–∏
    player_dict[player_id].update({'role': new_role})
    bot.send_message(player_id, text)
def ListBtn(player_dict, game_id, player_role, text):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–ª–æ–Ω–∫–∏ –∫–Ω–æ–ø–æ–∫ –∏–∑ –∏–º—ë–Ω –∏–≥—Ä–æ–∫–æ–≤, –∫—Ä–æ–º–µ –∏–≥—Ä–æ–∫–∞ —Å –≤—ã–±—Ä–∞–Ω–æ–π —Ä–æ–ª—å—é (player_role)
    chat_id = ''
    players_btn = types.InlineKeyboardMarkup()
    for key, val in player_dict.items():
        if val['role'] != player_role:
            # –í callback_data –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è 2 –∑–Ω–∞—á–µ–Ω–∏—è ID –∏–≥—Ä–æ–∫–∞(key) –∏ ID –∏–≥—Ä—ã(game_id),–º–µ–∂–¥—É –Ω–∏–º–∏ –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫–∞
            players_btn.add(types.InlineKeyboardButton(val['name'], callback_data=f'{key}{player_role[0]}{game_id}'))
        elif val['role'] == player_role:
            chat_id = key
    message_id = bot.send_message(chat_id, text, reply_markup=players_btn)
    return message_id.message_id
def ChoiceChecker(chat_id, chat, player_role):
    if not chat[player_role]:
        bot.edit_message_text(chat_id=chat_id, message_id=chat[f'{player_role[0]}List_id'],
                              text='–í—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–µ–∫–ª–æ...', reply_markup=None)
        chat.update({player_role: True})
def Timer(chat_id, sec):
    # —Ç–∞–π–º–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫–∞ –≤—Ä–µ–º—è –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç time_event
    global chat_list, time_now
    chat_list[chat_id].update({'time_event': datetime.now() + timedelta(seconds=sec)})
    while chat_list[chat_id]['time_event'] > time_now:
        time_now = datetime.now()
def PlayersAlive(player_dict):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å –∂–∏–≤—ã–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏
    mes = "*–ñ–∏–≤—ã–µ –∏–≥—Ä–æ–∫–∏:*"
    player_keys = list(player_dict.keys())
    for i in range(len(player_keys)):
        mes += f'\n{i+1}.{player_dict[player_keys[i]]["name"]}'
    return mes
def PlayersRole(player_dict):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å —Ä–æ–ª—è–º–∏ –∂–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
    mes = "*–ö—Ç–æ-—Ç–æ –∏–∑ –Ω–∏—Ö:*\n"
    player_keys = list(player_dict.keys())
    shuffle(player_keys)
    for i in range(len(player_keys)):
        mes += f'{player_dict[player_keys[i]]["role"]}'
        if i < len(player_keys) - 1:
            mes += ', '
    return mes
def VoiceHandler(game_id):
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –≥–æ–ª–æ—Å–æ–≤
    global chat_list
    players = chat_list[game_id]['players']
    voice_dict = []
    for key,val in players.items():
        if 'voice' in val:
            voice_dict.append(val['voice'])
            players[key].pop('voice')
    if len(voice_dict) > 0:
        dead = players[[max(set(voice_dict), key=voice_dict.count)][0]]
        players.pop([max(set(voice_dict), key=voice_dict.count)][0])
        return dead

@bot.message_handler(commands=['create_game', 'start_game'])
def get_command(mes):
    global game_running, chat_list, time_now
    # –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã, –≤ chat_list –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —á–∞—Ç, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –µ—â—ë –Ω–µ—Ç
    if mes.chat.id not in chat_list:
        # game_running - –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–¥—ë—Ç –ª–∏ –≤ —á–∞—Ç–µ —Å–µ–π—á–∞—Å –∏–≥—Ä–∞
        chat_list.update({mes.chat.id: {'game_running': False, 'players': {}}})
    # –°–ª–æ–≤–∞—Ä—å, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç id —á–∞—Ç–∞, game_running,—Å–ª–æ–≤–∞—Ä—å –∏–≥—Ä–æ–∫–æ–≤ –∏ button_id
    chat = chat_list[mes.chat.id]
    players = chat['players']

    # –≤ –æ–¥–Ω–æ–º —á–∞—Ç–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∏–≥—Ä—É (–ø–æ–∫–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π players –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞)
    if mes.text == '/create_game' and len(players) < 1:
        # –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä—å –∏–≥—Ä–æ–∫–æ–≤
        join_btn = types.InlineKeyboardMarkup()
        item1 = types.InlineKeyboardButton('–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ', callback_data='join')
        join_btn.add(item1)
        bot.send_message(mes.chat.id, """–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∏–≥—Ä—É
–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start_game  –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã""", reply_markup=join_btn)

    elif mes.text == '/start_game':
        if len(players) >= 4 and not chat['game_running']:
            # –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã –∑–Ω–∞—á–µ–Ω–∏–µ game_running –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ True —á—Ç–æ–±—ã –Ω–µ–ª—å–∑—è –±—ã–ª–æ –∏–≥—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–≥—Ä –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
            chat_list[mes.chat.id].update({'game_running': True})
            # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å join_btn –∏ —É–¥–∞–ª—è–µ–º –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ 'button_id' —Ç.–∫. –æ–Ω–æ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
            bot.edit_message_text(chat_id=mes.chat.id, message_id=chat['button_id'],
                                  text="–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ", reply_markup=None)
            del chat['button_id']
            # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è 'a' —ç—Ç–æ –°–ü–ò–°–û–ö —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∏–≥—Ä–æ–∫–∞—Ö, –∫–∞–∫ –≤ —Å–ª–æ–≤–∞—Ä–µ players, –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º
            a = list(players.items())
            shuffle(a)

            # –ë–µ—Ä—ë–º id –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏–∑ –ø–µ—Ä–µ–º–µ—à–∞–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏ –º–µ–Ω—è–µ–º –µ–≥–æ —Ä–æ–ª—å –≤ players
            ChangeRole(a[0][0], players, '–º–∞—Ñ–∏—è', '–¢—ã - ü§µüèª–º–∞—Ñ–∏—è!\n–¢–µ–±–µ —Ä–µ—à–∞—Ç—å –∫—Ç–æ –Ω–µ –ø—Ä–æ—Å–Ω—ë—Ç—Å—è —ç—Ç–æ–π –Ω–æ—á—å—é...')
            ChangeRole(a[1][0], players, '—à–µ—Ä–∏—Ñ', '–¢—ã - üïµüèºÔ∏è‚Äç‚ôÇÔ∏è—à–µ—Ä–∏—Ñ!\n–ì–ª–∞–≤–Ω—ã–π –≥–æ—Ä–æ–¥—Å–∫–æ–π –∑–∞—â–∏—Ç–Ω–∏–∫ –∏ –≥—Ä–æ–∑–∞ –º–∞—Ñ–∏–∏...')
            for i in range(2, len(a)):
                ChangeRole(a[i][0], players, '–º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å',
                           '–¢—ã - üë®üèº –ú–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å\n–¢–≤–æ—è –∑–∞–¥–∞—á–∞ –≤—ã—á–∏—Å–ª–∏—Ç—å –º–∞—Ñ–∏—é –∏ –Ω–∞ –≥–æ—Ä–æ–¥—Å–∫–æ–º —Å–æ–±—Ä–∞–Ω–∏–∏ –∫–∞–∑–Ω–∏—Ç—å –∑–∞—Å—Ä–∞–Ω—Ü–∞!')

            while True:

                if a[1][0] in players:
                    # Checker, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
                    chat.update({'dead': False, '—à–µ—Ä–∏—Ñ': False})
                else:
                    chat.update({'dead': False, '—à–µ—Ä–∏—Ñ': True})
                bot.send_video(mes.chat.id, open("video/sunset.mp4", "rb").read(), caption='''üåÉ –ù–∞—Å—Ç—É–ø–∞–µ—Ç –Ω–æ—á—å
–ù–∞ —É–ª–∏—Ü—ã –≥–æ—Ä–æ–¥–∞ –≤—ã—Ö–æ–¥—è—Ç –ª–∏—à—å —Å–∞–º—ã–µ –æ—Ç–≤–∞–∂–Ω—ã–µ –∏ –±–µ—Å—Å—Ç—Ä–∞—à–Ω—ã–µ. –£—Ç—Ä–æ–º –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ—Å—á–∏—Ç–∞—Ç—å –∏—Ö –≥–æ–ª–æ–≤—ã...''')
                bot.send_message(mes.chat.id, PlayersAlive(players) + '\n\n–°–ø–∞—Ç—å –æ—Å—Ç–∞–ª–æ—Å—å *1 –º–∏–Ω.*', parse_mode="Markdown")

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∏–≥—Ä–µ –∏ –≤ chat –∑–∞–ø–∏—Å—ã–≤–∞–µ–º id —ç—Ç–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

                chat.update({'dList_id': ListBtn(players, mes.chat.id, '–º–∞—Ñ–∏—è', '–ö–æ–≥–æ –±—É–¥–µ–º —É–±–∏–≤–∞—Ç—å?')})
                if a[1][0] in players:
                    chat.update({'—àList_id' : ListBtn(players, mes.chat.id, '—à–µ—Ä–∏—Ñ', '–ö–æ–≥–æ –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å?')})

                chat.update({'time_event': datetime.now() + timedelta(seconds=60)})

                while chat_list[mes.chat.id]['time_event'] > time_now:
                    time_now = datetime.now()
                    if chat['dead'] and chat['—à–µ—Ä–∏—Ñ']:
                        break

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –º–∞—Ñ–∏–∏ –∏ —à–µ—Ä–∏—Ñ–∞
                ChoiceChecker(a[0][0], chat, 'dead')
                if a[1][0] in players:
                    ChoiceChecker(a[1][0], chat, '—à–µ—Ä–∏—Ñ')

                bot.send_video(mes.chat.id, open("video/sunrise.mp4", "rb").read(), caption='''üèô –ù–∞—Å—Ç—É–ø–∞–µ—Ç –¥–µ–Ω—å
–°–æ–ª–Ω—Ü–µ –≤—Å—Ö–æ–¥–∏—Ç, –ø–æ–¥—Å—É—à–∏–≤–∞—è –Ω–∞ —Ç—Ä–æ—Ç—É–∞—Ä–∞—Ö –ø—Ä–æ–ª–∏—Ç—É—é –Ω–æ—á—å—é –∫—Ä–æ–≤—å...''')
                # dead –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ True –µ—Å–ª–∏ –º–∞—Ñ–∏—è –Ω–∏–∫–æ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–ª–∞
                if type(chat['dead']) != bool:
                    players.pop(chat['dead'][0])
                    bot.send_message(mes.chat.id,
                                     f'–°–µ–≥–æ–¥–Ω—è –±—ã–ª –∂–µ—Å—Ç–æ–∫–æ —É–±–∏—Ç {chat["dead"][1]["role"]} {chat["dead"][1]["name"]}...')
                else:
                    bot.send_message(mes.chat.id,
                                     f'–ú–∞—Ñ–∏—è –Ω–µ –ø—Ä–æ—Å–Ω—É–ª–∞—Å—å —ç—Ç–æ–π –Ω–æ—á—å—é...')
                    bot.send_message(mes.chat.id, f'*–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!*\n–ü–æ–±–µ–¥–∏–ª–∏ –º–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏', parse_mode="Markdown")
                    del chat_list[mes.chat.id]
                    break

                if len(players) < 3:
                    bot.send_message(mes.chat.id, f'*–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!*\n–ü–æ–±–µ–¥–∏–ª–∞ –º–∞—Ñ–∏—è', parse_mode="Markdown")
                    del chat_list[mes.chat.id]
                    break

                bot.send_message(mes.chat.id,
                                 f'''{PlayersAlive(players)}\n\n{PlayersRole(players)}\n
–°–µ–π—á–∞—Å —Å–∞–º–æ–µ –≤—Ä–µ–º—è –æ–±—Å—É–¥–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ—á–∏, —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –ø—Ä–∏—á–∏–Ω–∞—Ö –∏ —Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö...''', parse_mode="Markdown")
                Timer(mes.chat.id, 180)

                players_btn = types.InlineKeyboardMarkup()
                for key, val in players.items():
                    players_btn.add(types.InlineKeyboardButton(val['name'], callback_data=key))
                chat.update({'dList_id': bot.send_message(mes.chat.id, '''–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏ –Ω–∞–∫–∞–∑–∞—Ç—å –≤–∏–Ω–æ–≤–∞—Ç—ã—Ö.
–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–ª–∏—Ç—Å—è 45 —Å–µ–∫—É–Ω–¥''', reply_markup=players_btn).message_id})


                Timer(mes.chat.id, 45)
                # –ü–æ–¥—Å—á—ë—Ç –≥–æ–ª–æ—Å–æ–≤
                chat.update({'dead': VoiceHandler(mes.chat.id)})
                if chat["dead"] != None:
                    bot.edit_message_text(chat_id=mes.chat.id, message_id=chat['dList_id'],
                                          text=f'–í—ã —Ä–µ—à–∏–ª–∏ –∫–∞–∑–Ω–∏—Ç—å {chat["dead"]["name"]}. –û–Ω –æ–∫–∞–∑–∞–ª—Å—è {chat["dead"]["role"]}',
                                          reply_markup=None)
                else:
                    bot.edit_message_text(chat_id=mes.chat.id, message_id=chat['dList_id'],
                                          text='–ú–Ω–µ–Ω–∏—è –∂–∏—Ç–µ–ª–µ–π —Ä–∞–∑–æ—à–ª–∏—Å—å...\n–†–∞–∑–æ—à–ª–∏—Å—å –∏ —Å–∞–º–∏ –∂–∏—Ç–µ–ª–∏, —Ç–∞–∫ –Ω–∏–∫–æ–≥–æ –∏ –Ω–µ –ø–æ–≤–µ—Å–∏–≤...',
                                          reply_markup=None)

                if a[0][0] not in players:
                    bot.send_message(mes.chat.id, f'*–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!*\n–ü–æ–±–µ–¥–∏–ª–∏ –º–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏', parse_mode="Markdown")
                    del chat_list[mes.chat.id]
                    break
                elif len(players) < 2:
                    bot.send_message(mes.chat.id, f'*–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!*\n–ü–æ–±–µ–¥–∏–ª–∞ –º–∞—Ñ–∏—è', parse_mode="Markdown")
                    del chat_list[mes.chat.id]
                    break

        else:
            if 'button_id' in chat:
                bot.edit_message_text(chat_id=mes.chat.id, message_id=chat['button_id'],
                                      text="–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ", reply_markup=None)

            bot.send_message(mes.chat.id, '–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –ª—é–¥–µ–πüò¢')
            del chat_list[mes.chat.id]


@bot.message_handler(content_types=
                     ['text', 'audio', 'document', 'photo', 'sticker', 'video',
                      'video_note', 'voice', 'location', 'contact', 'pinned_message'])
def get_text(mes):
    if mes.chat.id in chat_list:
        chat = chat_list[mes.chat.id]
        if chat['game_running']:
            # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –∏–≥—Ä–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã
            if mes.from_user.id not in chat['players']:
                bot.delete_message(mes.chat.id, mes.message_id)
            # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–æ –≤—Ä–µ–º—è –Ω–æ—á–∏
            elif not chat['dead'] or not chat['—à–µ—Ä–∏—Ñ']:
                bot.delete_message(mes.chat.id, mes.message_id)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    global chat_list
    if call.data == 'join':
        chat_id = chat_list[call.message.chat.id]
        players = chat_id['players']
        # –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞, –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É –∏ –ø–µ—Ä–µ—ë–¥—ë—Ç –∫ –±–ª–æ–∫—É except
        try:
            bot.send_message(call.from_user.id, '–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ')
            if len(players) < 1:
                chat_id.update({'button_id': call.message.message_id})
            if PlayerInGame(call.from_user.id):
                chat_id['players'].update(
                    {call.from_user.id: {'name': call.from_user.first_name}})

            elif not PlayerInGame(call.from_user.id):
                bot.send_message(call.from_user.id, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è, –ø–æ–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥—Ä—É–≥–æ–π –∏–≥—Ä–µ')
        except:
            bot.send_message(call.message.chat.id, f'{call.from_user.first_name}, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è, –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ (–∑–∞–π—Ç–∏ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É start)')

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –º–∞—Ñ–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —É –Ω–µ—ë –≤ —á–∞—Ç–µ
    elif len(call.data.split('–º')) > 1:
        # –í callback_data –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è 2 –∑–Ω–∞—á–µ–Ω–∏—è ID –∏–≥—Ä–æ–∫–∞ –∏ ID –∏–≥—Ä—ã,–º–µ–∂–¥—É –Ω–∏–º–∏ –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É
        data = call.data.split('–º')
        dead = chat_list[int(data[1])]["players"][int(data[0])]
        bot.edit_message_text(chat_id=call.from_user.id, message_id=call.message.message_id,
                              text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {dead["name"]}', reply_markup=None)
        chat_list[int(data[1])].update({'dead': (int(data[0]), dead)})
        bot.send_message(int(data[1]), 'ü§µüèª –ú–∞—Ñ–∏—è –≤—ã–±—Ä–∞–ª–∞ –∂–µ—Ä—Ç–≤—É...')

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è —à–µ—Ä–∏—Ñ–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É —É –Ω–µ–≥–æ –≤ —á–∞—Ç–µ
    elif len(call.data.split('—à')) > 1:
        data = call.data.split('—à')
        checked = chat_list[int(data[1])]["players"][int(data[0])]
        bot.edit_message_text(chat_id=call.from_user.id, message_id=call.message.message_id,
                              text=f'{checked["name"]} –æ–∫–∞–∑–∞–ª—Å—è {checked["role"]}', reply_markup=None)
        bot.send_message(int(data[1]), 'üïµüèºÔ∏è‚Äç‚ôÇÔ∏è –®–µ—Ä–∏—Ñ —É—à—ë–ª –∏—Å–∫–∞—Ç—å –∑–ª–æ–¥–µ–µ–≤...')
        chat_list[int(data[1])].update({'—à–µ—Ä–∏—Ñ': True})

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤ –≤ –æ–±—â–µ–π –≥—Ä—É–ø–ø–µ
    elif call.data.isdigit:
        if call.from_user.id in chat_list[call.message.chat.id]['players']:
            chat_list[call.message.chat.id]['players'][call.from_user.id].update({'voice': int(call.data)})
bot.polling()
